{"version":3,"file":"static/js/748.46b67ac1.chunk.js","mappings":"6LAGaA,GAAaC,E,OAAAA,IAAOC,EAAAA,KAAPD,CAAH,yJ,SCAfE,EAAgBC,EAAQ,IAAxBD,YAEKE,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxBC,EAAWL,IAEjB,OACE,yBACE,SAACH,EAAD,CAAYS,GAAI,WAAaH,EAAII,MAAO,CAAEC,KAAMH,GAAhD,SACGD,KAIR,C,kLCbYK,EAAYX,EAAAA,GAAAA,IAAH,0CAITY,EAAaZ,EAAAA,GAAAA,KAAH,wDAKVa,EAAcb,EAAAA,GAAAA,MAAH,gPAaXc,EAAed,EAAAA,GAAAA,OAAH,qIAQZe,EAAaf,EAAAA,GAAAA,GAAH,yJ,SCsCvB,EA1DmB,WAAO,IAAD,EACvB,GAAwCgB,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAS,mCAAG,6FAChBJ,GAAa,GADG,mBAGYK,EAAAA,EAAAA,IAAYJ,GAHxB,gBAGNK,EAHM,EAGNA,QACRR,GAAU,OAAIQ,IAJA,gDAMdC,QAAQC,MAAR,MANc,yBAQdR,GAAa,GARC,4EAAH,qDAYfI,GAdC,CAeF,GAAE,CAACH,IASJ,OACE,UAACb,EAAD,YACE,UAACC,EAAD,CAAYoB,SATK,SAAAC,GACnBA,EAAIC,iBACJ,IAAQC,EAAUF,EAAIG,OAAOC,SAASC,OAA9BH,MACRd,EAAU,IACVH,EAAgB,CAAEqB,MAAOJ,GAC1B,EAIG,WACE,SAACtB,EAAD,CACE2B,KAAK,OACLC,KAAK,SACLC,YAAY,uBAEd,SAAC5B,EAAD,CAAc0B,KAAK,SAAnB,uBAGDlB,GACC,uCAEA,SAACP,EAAD,iBACGK,QADH,IACGA,OADH,EACGA,EAAQuB,KAAI,gBAAGtC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACX,SAACF,EAAA,EAAD,CAAoBC,GAAIA,EAAIC,MAAOA,GAAnBD,EADL,QAOtB,C","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #020930;\n\n  :hover,\n  :focus {\n    color: #f74f07;\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './MovieItem.styled';\n\nconst { useLocation } = require('react-router-dom');\n\nexport const MovieItem = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <StyledLink to={'/movies/' + id} state={{ from: location }}>\n        {title}\n      </StyledLink>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 16px;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 8px;\n  width: 350px;\n  border-radius: 4px;\n  border: 1px solid #020930;\n  background-color: transparent;\n\n  :focus-within {\n    border: 1px solid #f74f07;\n    outline: 1px solid transparent;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  cursor: pointer;\n  border: none;\n  color: #f74f07;\n  background-color: #020930;\n  border-radius: 4px;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-top: 16px;\n`;\n","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/movies.service';\nimport {\n  Container,\n  StyledButton,\n  StyledForm,\n  StyledInput,\n  StyledList,\n} from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await searchMovie(searchQuery);\n        setMovies([...results]);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const { value } = evt.target.elements.search;\n    setMovies([]);\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <Container>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter key word...\"\n        />\n        <StyledButton type=\"submit\">Search</StyledButton>\n      </StyledForm>\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <StyledList>\n          {movies?.map(({ id, title }) => (\n            <MovieItem key={id} id={id} title={title} />\n          ))}\n        </StyledList>\n      )}\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["StyledLink","styled","Link","useLocation","require","MovieItem","id","title","location","to","state","from","Container","StyledForm","StyledInput","StyledButton","StyledList","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","isLoading","setIsLoading","searchQuery","get","useEffect","fetchData","searchMovie","results","console","error","onSubmit","evt","preventDefault","value","target","elements","search","query","type","name","placeholder","map"],"sourceRoot":""}